name: test-composition-and-publish-to-ghcr

on: 
  workflow_dispatch:
  push:
    paths:
      - 'apis/**'
      - 'crossplane.yaml'      
    
env:
  AZURE_CREDS_JSON: ${{ secrets.AZURE_CREDS_JSON }}
  GHCR_PAT: ${{ secrets.GHCR_PAT }}
  CONFIGURATION_VERSION: "v0.0.2"

jobs:
  composition-rendering-test:
    runs-on: ubuntu-latest

    steps:
      - name: Run Composition rendering & Integration tests as described in https://www.codecentric.de/wissens-hub/blog/testing-crossplane-compositions-kuttl
        run: echo "Run tests here!"

  kuttl-tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@master

      # Secrets configucess via azure-creds.json configuration is only needed for real external Azure infrastructure
      - name: Prepare Azure credentials file
        run: |
          echo $AZURE_CREDS_JSON > azure-creds.json

      - name: Install kuttl & run Crossplane featured kuttl tests
        run: |
          echo "### Add homebrew to path as described in https://github.com/actions/runner-images/blob/main/images/linux/Ubuntu2004-Readme.md#notes"
          eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"
        
          echo "### Install kuttl via brew"
          brew tap kudobuilder/tap
          brew install kuttl-cli

          echo "### Let's try to use kuttl"
          kubectl kuttl --version

          echo "### Run Crossplane featured kuttl tests"
          kubectl kuttl test
          
  build-configuration-and-publish-to-ghcr:
    needs: [composition-rendering-test,kuttl-tests]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_PAT }}

      - name: Install Crossplane CLI
        run: |
          curl -sL "https://raw.githubusercontent.com/crossplane/crossplane/master/install.sh" |sh
          sudo mv crossplane /usr/local/bin

      - name: Build Crossplane Configuration package & publish it to GitHub Container Registry
        run: |
          echo "### Build Configuration .xpkg file"
          crossplane xpkg build -f . -e "./examples" --ignore=".github/workflows/*,install/*" --verbose

          echo "### Publish as OCI image to GHCR"
          crossplane xpkg push "ghcr.io/fnietoga/crossplane-xtstorageaccount:$CONFIGURATION_VERSION" --domain=https://ghcr.io --verbose